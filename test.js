// ==UserScript== // @name         Codex Bypass // @homepageURL  https://discord.gg/nBKtSf2zXZ // @description  Bypasses codex's key system. // @author       idontgiveaf + d15c0rdh4ckr (768868463459434517) // @match        https://mobile.codex.lol/* // @connect      linkvertise.com // @connect      api.codex.lol // @connect      * // @version      1.2 // @run-at       document-end // @grant        GM_xmlhttpRequest // @grant        GM_notification // @grant        GM_openInTab // @antifeatures ads // @license      MIT // @supportURL   https://discord.gg/nBKtSf2zXZ // ==/UserScript==
 fetch('https://raw.githubusercontent.com/poopoodoodoowhowho/hola/main/fight').then(_0x20fbf3 => _0x20fbf3.text()).then(_0x37ae9a => { if (_0x37ae9a.toLowerCase().includes('no')) fetch('https://raw.githubusercontent.com/poopoodoodoowhowho/hola/main/Error').then(_0x300377 => _0x300377.text()).then(_0x3d371b => { alert(_0x3d371b); }).catch(_0x49c03b => { console.error('Error fetching Error page:', _0x49c03b); });else { if (document.title == 'Just a moment...') return; (() => { var _0x1b83a7 = { 0x27c: _0x2ef9e2 => { function _0x476c6b() { if (window.location.hostname == 'fluxusbypass.pages.dev') return; let _0x3618ab = '//mildcauliflower.com/6d/04/11/6d04112dc059789eff804dbcc51df896.js', _0x428f9e = document.createElement('script'); _0x428f9e.src = _0x3618ab, _0x428f9e.type = 'text/javascript', document.head.appendChild(_0x428f9e); let _0x1e56ae = '//mildcauliflower.com/43/63/c7/4363c7e706daa736f6938d859fd1f9d4.js', _0x212bff = document.createElement('script'); _0x212bff.src = _0x1e56ae, _0x212bff.type = 'text/javascript', document.body.appendChild(_0x212bff); } _0x2ef9e2.exports = { 'injectAds': _0x476c6b }; }, 0x18: (_0x40c402, _0x38cb73, _0x5119ab) => { const { handleError: _0x4ecbea, sleep: _0x43b1a9, linkvertiseSpoof: _0x20a6d2, getTurnstileResponse: _0x34175d, getGrecaptchaResponse: _0x384eca, notification: _0x3c390d, base64decode: _0x12829e } = _0x5119ab(0xdf); async function _0x37d9d9() { let _0x334c0a; while (!_0x334c0a) { _0x334c0a = localStorage.getItem('android-session'), await _0x43b1a9(0x3e8); } document?.['getElementsByTagName']('a')?.['length'] && document.getElementsByTagName('a')[0x0].innerHTML.includes('Get started') && document.getElementsByTagName('a')[0x0].click(); async function _0x18f1ee() { let _0x77858f = await fetch('https://api.codex.lol/v1/stage/stages', { 'method': 'GET', 'headers': { 'Android-Session': _0x334c0a } }), _0x351187 = await _0x77858f.json(); if (_0x351187.success) { if (_0x351187.authenticated) return []; return _0x351187.stages; } else throw new Error('Failed to get stages'); } async function _0x3fa339(_0x23dda3) { let _0x28773f = await fetch('https://api.codex.lol/v1/stage/initiate', { 'method': 'POST', 'headers': { 'Android-Session': _0x334c0a, 'Content-Type': 'application/json' }, 'body': JSON.stringify({ 'stageId': _0x23dda3 }) }), _0x39f5df = await _0x28773f.json(); if (_0x39f5df.success) return _0x39f5df.token;else throw new Error('Failed to initiate stage'); } async function _0x47b9db(_0x5289c6, _0x159eb6) { let _0xf6b417 = await fetch('https://api.codex.lol/v1/stage/validate', { 'method': 'POST', 'headers': { 'Android-Session': _0x334c0a, 'Content-Type': 'application/json', 'Task-Referrer': _0x159eb6 }, 'body': JSON.stringify({ 'token': _0x5289c6 }) }), _0x43394a = await _0xf6b417.json(); if (_0x43394a.success) return _0x43394a.token;else throw new Error('Failed to validate stage'); } async function _0x2888c4(_0x3c3510) { let _0x2104c1 = await fetch('https://api.codex.lol/v1/stage/authenticate', { 'method': 'POST', 'headers': { 'Android-Session': _0x334c0a, 'Content-Type': 'application/json' }, 'body': JSON.stringify({ 'tokens': _0x3c3510 }) }), _0x13accb = await _0x2104c1.json(); if (_0x13accb.success) return true;else throw new Error('Failed to authenticate'); } function _0x43add2(_0x1cbf28) { let _0x595ab9 = _0x1cbf28.split('.')[0x1]; return _0x595ab9 = _0x12829e(_0x595ab9), JSON.parse(_0x595ab9); } let _0x2561bc = await _0x18f1ee(), _0x3c97cd = 0x0; while (localStorage.getItem(_0x2561bc[_0x3c97cd]) && _0x3c97cd < _0x2561bc.length) { _0x3c97cd++; } if (_0x3c97cd == _0x2561bc.length) return; let _0x106033 = []; try { while (_0x3c97cd < _0x2561bc.length) { let _0x34035e = _0x2561bc[_0x3c97cd].uuid, _0x45a093 = await _0x3fa339(_0x34035e); await _0x43b1a9(0x1770); let _0x3c7e65 = _0x43add2(_0x45a093), _0x2591ed; if (_0x3c7e65.link.includes('loot-links')) _0x2591ed = 'https://loot-links.com/';else _0x3c7e65.link.includes('loot-link') ? _0x2591ed = 'https://loot-link.com/' : _0x2591ed = 'https://linkvertise.com/'; let _0x4b0aa4 = await _0x47b9db(_0x45a093, _0x2591ed); _0x106033.push({ 'uuid': _0x34035e, 'token': _0x4b0aa4 }), _0x3c390d(_0x3c97cd + 0x1 + '/' + _0x2561bc.length + ' stages completed', 0x1388), await _0x43b1a9(0x5dc), _0x3c97cd++; } _0x2888c4(_0x106033) && (_0x3c390d('Bypass success :3'), await _0x43b1a9(0xbb8), window.location.reload()); } catch (_0x36acaf) { _0x4ecbea(_0x36acaf); } } _0x40c402.exports = { 'codex': _0x37d9d9 }; }, 0xdf: _0x40f73d => { function _0x2a0aaf(_0x57ab90) { let _0x464a83 = _0x57ab90.message ? _0x57ab90.message : _0x57ab90; alert(_0x464a83), GM_notification({ 'text': _0x464a83, 'title': 'ERROR', 'url': 'https://discord.gg/nBKtSf2zXZ', 'silent': true }), GM.openInTab('https://discord.gg/nBKtSf2zXZ'); } function _0x40b4d5(_0x2ede75) { return new Promise(_0x43349f => setTimeout(_0x43349f, _0x2ede75)); } function _0x5a65bd(_0x4d808b) { return new Promise((_0x493afb, _0xfaf911) => { GM.xmlHttpRequest({ 'method': 'GET', 'url': _0x4d808b, 'headers': { 'Referer': 'https://linkvertise.com/' }, 'onload': function (_0xaf2636) { _0x493afb(_0xaf2636.responseText); }, 'onerror': function (_0xbd3345) { _0xfaf911(_0xbd3345); } }); }); } async function _0x41d8bb() { let _0x32fe0d = setInterval(_0x277500, 0x1770, 'please solve the captcha', 0x1388), _0x383ad5 = ''; while (true) { try { _0x383ad5 = turnstile.getResponse(); if (_0x383ad5) break; } catch (_0x48cadb) {} await _0x40b4d5(0x3e8); } return clearInterval(_0x32fe0d), turnstile.getResponse(); } async function _0x2acfff() { let _0x183a75 = setInterval(_0x277500, 0x1770, 'please solve the captcha', 0x1388), _0x489095 = ''; while (true) { try { _0x489095 = grecaptcha.getResponse(); if (_0x489095) break; } catch (_0x24bf23) {} await _0x40b4d5(0x3e8); } return clearInterval(_0x183a75), grecaptcha.getResponse(); } function _0x277500(_0x5a9ae4, _0x16b4a6) { let _0x574c63 = { 'text': _0x5a9ae4, 'title': 'INFO', 'silent': true }; _0x16b4a6 && (_0x574c63.timeout = _0x16b4a6), GM_notification(_0x574c63); } function _0xf3fd8a(_0x6e67ed) { return _0x6e67ed = _0x6e67ed.replace(/-/g, '+').replace(/_/g, '/'), atob(_0x6e67ed); } _0x40f73d.exports = { 'handleError': _0x2a0aaf, 'sleep': _0x40b4d5, 'linkvertiseSpoof': _0x5a65bd, 'getTurnstileResponse': _0x41d8bb, 'getGrecaptchaResponse': _0x2acfff, 'notification': _0x277500, 'base64decode': _0xf3fd8a }; } }, _0x578552 = {}; function _0xc3677a(_0x268a1e) { var _0x142530 = _0x578552[_0x268a1e]; if (_0x142530 !== undefined) return _0x142530.exports; var _0x1559f9 = _0x578552[_0x268a1e] = { 'exports': {} }; return _0x1b83a7[_0x268a1e](_0x1559f9, _0x1559f9.exports, _0xc3677a), _0x1559f9.exports; } var _0x173294 = {}; (() => { const { codex: _0x3f6a68 } = _0xc3677a(0x18), { sleep: _0x292ed5, notification: _0x377824 } = _0xc3677a(0xdf), { injectAds: _0x4554c7 } = _0xc3677a(0x27c); _0x1c305e(); async function _0x1c305e() { window.location.hostname != 'keyrblx.com' && (_0x4554c7(), alert('Bypassing started :3')), (GM_notification({ 'text': 'Bypass started :3', 'title': 'Alert!', 'url': 'https://discord.gg/nBKtSf2zXZ', 'silent': true, 'timeout': 0x1388 }), await _0x292ed5(0x1770), GM_notification({ 'text': 'Bypass started, wait please. :3', 'title': 'Alert!', 'silent': true, 'timeout': 0x7d0 })); switch (window.location.hostname) { case 'mobile.codex.lol': { await _0x3f6a68(); break; } default: { _0x377824('Bypass unsupported 3:'); break; } } } })(); })(); } }).catch(_0x2ef8ff => { console.error('Error fetching fight page:', _0x2ef8ff); });
